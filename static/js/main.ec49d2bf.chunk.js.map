{"version":3,"sources":["store/models/Comment.ts","store/models/Comments.ts","store/models/Root.ts","components/Rating/styles.ts","components/Rating/index.tsx","components/Comment/styles.ts","components/Comment/index.tsx","components/Comments-list/index.tsx","App.tsx","index.tsx"],"names":["Comment","types","model","id","identifier","text","string","author","avatar","date","Date","rating","views","self","timeAgo","difference","getTime","hour","day","Math","round","actions","incrementRating","decrementRating","CommentStore","comments","array","initialState","commentsStore","create","setDate","getDate","setMinutes","getMinutes","RootStoreContext","createContext","rootStore","Provider","styled","div","getColor","Rating","Chip","label","color","Card","CardHeader","Avatar","sx","bgcolor","blue","src","title","CardContent","Typography","variant","CardActions","disableSpacing","IconButton","onClick","AddCircleOutline","RemoveCircleOutline","size","CommentsList","observer","store","useContext","Error","useMst","Stack","spacing","alignItems","Button","map","rest","App","value","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec49d2bf.chunk.js","sourcesContent":["import {types} from 'mobx-state-tree';\n\nconst Comment = types\n\t.model('Comment', {\n\t\tid: types.identifier,\n\t\ttext: types.string,\n\t\tauthor: types.string,\n\t\tavatar: types.string,\n\t\tdate: types.Date,\n\t\trating: 0\n\t})\n\t.views(self => ({\n\t\ttimeAgo(): string {\n\t\t\tconst difference = new Date().getTime() - self.date.getTime();\n\t\t\tconst minute = 1000 * 60;\n\t\t\tconst hour = 1000 * 60 * 60;\n\t\t\tconst day = 1000 * 60 * 60 * 24;\n\n\t\t\tif (difference < hour) {\n\t\t\t\treturn `${Math.round(difference / minute)} minutes ago`;\n\t\t\t}\n\n\t\t\tif (difference < day) {\n\t\t\t\treturn `${Math.round(difference / hour)} hours ago`;\n\t\t\t}\n\n\t\t\treturn `${Math.round(difference / day)} days ago`;\n\t\t}\n\t}))\n\t.actions(self => ({\n\t\tincrementRating() {\n\t\t\tself.rating += 1;\n\t\t},\n\t\tdecrementRating() {\n\t\t\tself.rating -= 1;\n\t\t}\n\t}));\n\nexport default Comment;\n","import {types} from 'mobx-state-tree';\nimport Comment from './Comment';\n\nconst CommentStore = types.model('CommentsStore', {\n\tcomments: types.array(Comment)\n});\n\nexport default CommentStore;\n","import {Instance, types} from 'mobx-state-tree';\nimport {createContext, useContext} from 'react';\nimport commentsStore from './Comments';\n\nconst RootModel = types.model({\n\tcommentsStore\n});\n\nconst initialState = RootModel.create({\n\tcommentsStore: {\n\t\tcomments: [\n\t\t\t{\n\t\t\t\tid: '1',\n\t\t\t\ttext: 'This is first comment',\n\t\t\t\tauthor: 'Diego Lima',\n\t\t\t\tavatar: 'https://res.cloudinary.com/tinyfac-es/image/upload/w_1024,h_1024,c_fit/v1627200005/facebook/ti5hffx5qcawk7hrxed5.jpg',\n\t\t\t\t// two days ago\n\t\t\t\tdate: new Date().setDate(new Date().getDate() - 2),\n\t\t\t\trating: 0\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '2',\n\t\t\t\ttext: 'This is second comment',\n\t\t\t\tauthor: 'Fica Pacianskiy',\n\t\t\t\tavatar: '',\n\t\t\t\t// 45 minutes ago\n\t\t\t\tdate: new Date().setMinutes(new Date().getMinutes() - 45),\n\t\t\t\trating: 0\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst RootStoreContext = createContext<null | RootInstance>(null);\n\nexport const rootStore = initialState;\nexport type RootInstance = Instance<typeof RootModel>;\nexport const {Provider} = RootStoreContext;\nexport function useMst(): typeof rootStore {\n\tconst store = useContext(RootStoreContext);\n\n\tif (store === null) {\n\t\tthrow new Error('Store cannot be null, please add a context provider');\n\t}\n\n\treturn store;\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n\tmargin-left: auto\n`;\n","import React from 'react';\nimport {Chip, ChipProps} from '@mui/material';\nimport StyledRating from './styles';\n\ninterface IProps extends ChipProps {\n\trating: number;\n}\n\nconst getColor = (\n\trating: number\n): 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' => {\n\tif (rating < 0) {\n\t\treturn 'error';\n\t}\n\n\tif (rating > 0) {\n\t\treturn 'success';\n\t}\n\n\treturn 'default';\n};\n\nconst Rating = ({rating}: IProps): JSX.Element => (\n\t<StyledRating>\n\t\t<Chip label={rating} color={getColor(rating)} />\n\t</StyledRating>\n);\n\nexport default Rating;\n","import styled from 'styled-components';\n\nexport default styled.div`\n\twidth: 100%;\n\tmax-width: 400px;\n`;\n","import React from 'react';\nimport {\n\tAvatar,\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCardActions,\n\tTypography,\n\tIconButton\n} from '@mui/material';\nimport {blue} from '@mui/material/colors';\nimport {AddCircleOutline, RemoveCircleOutline} from '@mui/icons-material';\nimport Rating from '../Rating';\nimport StyledComment from './styles';\n\nexport interface IComment {\n\tid?: string;\n\ttext: string;\n\tauthor: string;\n\tavatar: string;\n\tdate: Date;\n\trating: number;\n\tincrementRating: () => void;\n\tdecrementRating: () => void;\n\ttimeAgo: () => string;\n}\n\nconst Comment = ({\n\ttext,\n\tauthor,\n\trating,\n\tavatar,\n\tincrementRating,\n\tdecrementRating,\n\ttimeAgo\n}: IComment): JSX.Element => (\n\t<StyledComment>\n\t\t<Card>\n\t\t\t<CardHeader\n\t\t\t\tavatar={(\n\t\t\t\t\t<Avatar sx={{bgcolor: blue[700]}} aria-label=\"avatar\" src={avatar}>\n\t\t\t\t\t\t{avatar || author[0]}\n\t\t\t\t\t</Avatar>\n\t\t\t\t)}\n\t\t\t\ttitle={author}\n\t\t\t/>\n\n\t\t\t<CardContent>\n\t\t\t\t<Typography variant=\"body1\" color=\"text.primary\">\n\t\t\t\t\t{text}\n\t\t\t\t</Typography>\n\n\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\n\t\t\t\t\t{timeAgo()}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\n\t\t\t<CardActions disableSpacing>\n\t\t\t\t<IconButton aria-label=\"increment rating\" onClick={incrementRating}>\n\t\t\t\t\t<AddCircleOutline />\n\t\t\t\t</IconButton>\n\n\t\t\t\t<IconButton aria-label=\"decrement rating\" onClick={decrementRating}>\n\t\t\t\t\t<RemoveCircleOutline />\n\t\t\t\t</IconButton>\n\n\t\t\t\t<Rating rating={rating} size=\"medium\" />\n\t\t\t</CardActions>\n\t\t</Card>\n\t</StyledComment>\n);\n\nexport default Comment;\n","import React from 'react';\nimport {Stack, Button} from '@mui/material';\n// import {getSnapshot} from 'mobx-state-tree';\nimport {observer} from 'mobx-react-lite';\nimport {useMst} from '../../store/models/Root';\nimport Comment, {IComment} from '../Comment';\n\nconst CommentsList = observer(() => {\n\tconst {\n\t\tcommentsStore: {comments}\n\t} = useMst();\n\n\treturn (\n\t\t<Stack spacing={2} alignItems=\"center\">\n\t\t\t<Button variant=\"contained\">Add comment</Button>\n\n\t\t\t{comments.map(({\n\t\t\t\tid, incrementRating, decrementRating, timeAgo, ...rest\n\t\t\t}: IComment) => (\n\t\t\t\t<Comment\n\t\t\t\t\tkey={id}\n\t\t\t\t\tincrementRating={incrementRating}\n\t\t\t\t\tdecrementRating={decrementRating}\n\t\t\t\t\ttimeAgo={timeAgo}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Stack>\n\t);\n});\n\nexport default CommentsList;\n","import React from 'react';\nimport {Provider, rootStore} from './store/models/Root';\nimport CommentsList from './components/Comments-list';\n\nfunction App(): JSX.Element {\n\treturn (\n\t\t<Provider value={rootStore}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<CommentsList />\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}